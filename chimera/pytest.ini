[pytest]
# Pytest configuration for Project Chimera
# Task 10.1: Set up local testing infrastructure

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = 
    bot
    scripts

# Minimum Python version
minversion = 7.4

# Add current directory to Python path
pythonpath = .

# Output options
addopts = 
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Strict config (fail on unknown config options)
    --strict-config
    # Coverage options
    --cov=bot/src
    --cov=scripts
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    # Coverage thresholds
    --cov-fail-under=80
    # Asyncio mode
    --asyncio-mode=auto
    # Warnings
    -W ignore::DeprecationWarning
    -W ignore::PendingDeprecationWarning

# Test markers for categorization
markers =
    unit: Unit tests for individual modules
    integration: Integration tests across multiple modules
    e2e: End-to-end tests with external dependencies
    slow: Tests that take significant time to run
    requires_rpc: Tests that require RPC connection
    requires_db: Tests that require database connection
    requires_redis: Tests that require Redis connection
    requires_fork: Tests that require Anvil fork
    state_engine: StateEngine module tests
    opportunity_detector: OpportunityDetector module tests
    execution_planner: ExecutionPlanner module tests
    safety_controller: SafetyController module tests
    backtest: Backtest engine tests
    contract: Smart contract tests (Foundry)

# Asyncio configuration
asyncio_mode = auto

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Ignore paths
norecursedirs = 
    .git
    .venv
    venv
    env
    __pycache__
    *.egg-info
    dist
    build
    node_modules
    contracts/lib
    contracts/out
    contracts/cache

# Filterwarnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Coverage configuration
[coverage:run]
source = bot/src,scripts
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = htmlcov
