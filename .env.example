# Project Chimera Environment Configuration
# Copy this file to .env and fill in your actual values
# NEVER commit .env to git - it contains sensitive information

# =============================================================================
# RPC PROVIDERS (MAINNET)
# =============================================================================

# Alchemy (Primary Provider)
# Sign up at: https://www.alchemy.com/
# Create a Base Mainnet app and copy your API key
ALCHEMY_API_KEY=your_alchemy_api_key_here
ALCHEMY_WSS=wss://base-mainnet.g.alchemy.com/v2/YOUR_KEY_HERE
ALCHEMY_HTTPS=https://base-mainnet.g.alchemy.com/v2/YOUR_KEY_HERE

# QuickNode (Backup Provider)
# Sign up at: https://www.quicknode.com/
# Create a Base endpoint and copy your URL
QUICKNODE_HTTPS=https://your-endpoint.base.quiknode.pro/YOUR_KEY_HERE

# =============================================================================
# RPC PROVIDERS (TESTNET)
# =============================================================================

# Alchemy Base Sepolia (for testing)
ALCHEMY_WSS_TESTNET=wss://base-sepolia.g.alchemy.com/v2/YOUR_KEY_HERE
ALCHEMY_HTTPS_TESTNET=https://base-sepolia.g.alchemy.com/v2/YOUR_KEY_HERE

# QuickNode Base Sepolia (backup for testing)
QUICKNODE_HTTPS_TESTNET=https://your-testnet-endpoint.base.quiknode.pro/YOUR_KEY_HERE

# =============================================================================
# DATABASE
# =============================================================================

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# For Docker: postgresql://chimera_user:chimera_password@localhost:5432/chimera
# For local: postgresql://your_user:your_password@localhost:5432/chimera
DATABASE_URL=postgresql://chimera_user:chimera_password@localhost:5432/chimera

# Redis connection string
# Format: redis://host:port/db
# For Docker: redis://localhost:6379/0
# For local: redis://localhost:6379/0
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# OPERATOR WALLET
# =============================================================================

# Private key for the operator wallet (signs transactions)
# Generate with: cast wallet new
# 
# ⚠️  SECURITY WARNING:
# - NEVER use a wallet with real funds for development
# - NEVER commit this file with real private keys
# - In production, use AWS Secrets Manager instead
# - Keep minimal balance (0.5 ETH for gas only)
OPERATOR_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# Operator wallet address (for reference, not used in code)
OPERATOR_ADDRESS=0x0000000000000000000000000000000000000000

# =============================================================================
# TREASURY
# =============================================================================

# Treasury address where profits are sent
# Should be a Gnosis Safe multisig in production
# For development, can be any address
TREASURY_ADDRESS=0x0000000000000000000000000000000000000000

# =============================================================================
# ENVIRONMENT
# =============================================================================

# Current environment: development, testnet, mainnet
# Controls which RPC endpoints and contracts are used
ENVIRONMENT=development

# =============================================================================
# LOGGING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Use DEBUG for development, INFO for production
LOG_LEVEL=INFO

# Log format: json, text
# Use json for production (easier to parse), text for development
LOG_FORMAT=text

# =============================================================================
# AWS (PRODUCTION ONLY)
# =============================================================================

# AWS region for Secrets Manager, CloudWatch, etc.
AWS_REGION=us-east-1

# AWS Secrets Manager secret name for operator key
# Only used when ENVIRONMENT=mainnet
AWS_SECRET_NAME=chimera/operator-key

# =============================================================================
# MONITORING (PRODUCTION ONLY)
# =============================================================================

# PagerDuty integration key for critical alerts
# Get from: https://www.pagerduty.com/
PAGERDUTY_INTEGRATION_KEY=your_pagerduty_key_here

# Slack webhook URL for notifications
# Get from: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable specific features for testing
ENABLE_EXECUTION=true
ENABLE_MONITORING=true
ENABLE_ALERTS=true

# Enable experimental features (use with caution)
ENABLE_BRIBE_V2=false
ENABLE_MULTI_PATH_SUBMISSION=false

# =============================================================================
# OPERATIONAL LIMITS (OVERRIDE CONFIG.YAML)
# =============================================================================

# These override the values in config.yaml if set
# Useful for quick adjustments without editing config files

# Maximum single execution in USD (leave empty to use config.yaml)
# MAX_SINGLE_EXECUTION_USD=500

# Maximum daily volume in USD (leave empty to use config.yaml)
# MAX_DAILY_VOLUME_USD=2500

# Minimum profit in USD (leave empty to use config.yaml)
# MIN_PROFIT_USD=50

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode (more verbose logging, additional checks)
DEBUG=false

# Dry run mode (simulate but don't actually submit transactions)
DRY_RUN=false

# Local fork URL (for testing against Anvil/Hardhat fork)
# FORK_URL=http://localhost:8545

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in your actual values (API keys, private keys, etc.)
# 3. NEVER commit .env to git
# 4. Keep .env secure - it contains sensitive information
# 5. Use AWS Secrets Manager for production deployments
# 6. Rotate keys regularly (every 90 days minimum)
# 7. Use separate wallets for development, testnet, and mainnet
# 8. Keep operator wallet balance minimal (only what's needed for gas)
