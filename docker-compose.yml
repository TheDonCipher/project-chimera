# Docker Compose for Project Chimera Local Development
# Provides PostgreSQL and Redis for local testing

version: '3.8'

services:
  # PostgreSQL database for execution logs and metrics
  postgres:
    image: postgres:15-alpine
    container_name: chimera-postgres
    environment:
      POSTGRES_DB: chimera
      POSTGRES_USER: chimera_user
      POSTGRES_PASSWORD: chimera_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U chimera_user -d chimera']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis cache for hot state data
  redis:
    image: redis:7-alpine
    container_name: chimera-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chimera-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@chimera.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - tools # Only start with: docker-compose --profile tools up

  # Redis Commander for cache management (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: chimera-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - tools # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: chimera-network
